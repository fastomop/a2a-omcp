{
    "omop_queries": [
      {
        "complexity": "simple",
        "category": "demographics",
        "question": "How many patients are in the database?",
        "sql": "SELECT COUNT(DISTINCT person_id) AS patient_count FROM person;"
      },
      {
        "complexity": "simple",
        "category": "demographics",
        "question": "What is the gender distribution of patients?",
        "sql": "SELECT gender_concept_id, concept_name, COUNT(*) AS count\nFROM person p\nJOIN concept c ON p.gender_concept_id = c.concept_id\nGROUP BY gender_concept_id, concept_name\nORDER BY count DESC;"
      },
      {
        "complexity": "simple",
        "category": "demographics",
        "question": "How many patients are older than 65?",
        "sql": "SELECT COUNT(*) AS elderly_count\nFROM person\nWHERE EXTRACT(YEAR FROM CURRENT_DATE) - year_of_birth > 65;"
      },
      {
        "complexity": "simple",
        "category": "conditions",
        "question": "How many patients have been diagnosed with type 2 diabetes?",
        "sql": "SELECT COUNT(DISTINCT person_id) AS diabetes_patient_count\nFROM condition_occurrence co\nJOIN concept c ON co.condition_concept_id = c.concept_id\nWHERE c.concept_id = 201826 -- Type 2 diabetes concept ID\n  AND c.standard_concept = 'S';"
      },
      {
        "complexity": "simple",
        "category": "medications",
        "question": "How many unique drugs have been prescribed?",
        "sql": "SELECT COUNT(DISTINCT drug_concept_id) AS unique_drug_count\nFROM drug_exposure\nWHERE drug_concept_id != 0;"
      },
      {
        "complexity": "moderate",
        "category": "conditions",
        "question": "What are the top 10 most common conditions in the database?",
        "sql": "SELECT c.concept_name, COUNT(DISTINCT co.person_id) AS patient_count\nFROM condition_occurrence co\nJOIN concept c ON co.condition_concept_id = c.concept_id\nWHERE c.standard_concept = 'S'\nGROUP BY c.concept_name\nORDER BY patient_count DESC\nLIMIT 10;"
      },
      {
        "complexity": "moderate",
        "category": "medications",
        "question": "What are the most common medications prescribed for hypertension?",
        "sql": "SELECT c_med.concept_name AS medication, COUNT(DISTINCT de.person_id) AS patient_count\nFROM condition_occurrence co\nJOIN concept c_cond ON co.condition_concept_id = c_cond.concept_id\nJOIN drug_exposure de ON co.person_id = de.person_id\nJOIN concept c_med ON de.drug_concept_id = c_med.concept_id\nWHERE c_cond.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316866) -- Hypertension concept\n  AND c_cond.standard_concept = 'S'\n  AND c_med.standard_concept = 'S'\n  AND de.drug_exposure_start_date >= co.condition_start_date\nGROUP BY c_med.concept_name\nORDER BY patient_count DESC\nLIMIT 10;"
      },
      {
        "complexity": "moderate",
        "category": "procedures",
        "question": "What procedures are commonly performed on patients with heart failure?",
        "sql": "SELECT c_proc.concept_name AS procedure_name, COUNT(*) AS procedure_count\nFROM condition_occurrence co\nJOIN concept c_cond ON co.condition_concept_id = c_cond.concept_id\nJOIN procedure_occurrence po ON co.person_id = po.person_id\nJOIN concept c_proc ON po.procedure_concept_id = c_proc.concept_id\nWHERE c_cond.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316139) -- Heart failure concept\n  AND c_cond.standard_concept = 'S'\n  AND c_proc.standard_concept = 'S'\n  AND po.procedure_date >= co.condition_start_date\nGROUP BY c_proc.concept_name\nORDER BY procedure_count DESC\nLIMIT 15;"
      },
      {
        "complexity": "moderate",
        "category": "visits",
        "question": "What is the average length of stay for inpatient visits?",
        "sql": "SELECT c.concept_name AS visit_type,\n       AVG(EXTRACT(DAY FROM (visit_end_datetime - visit_start_datetime))) AS avg_length_of_stay_days\nFROM visit_occurrence v\nJOIN concept c ON v.visit_concept_id = c.concept_id\nWHERE visit_concept_id = 9201 -- Inpatient visit\n  AND visit_end_datetime IS NOT NULL\nGROUP BY c.concept_name;"
      },
      {
        "complexity": "moderate",
        "category": "measurements",
        "question": "What is the distribution of HbA1c values for diabetic patients?",
        "sql": "SELECT\n  CASE\n    WHEN value_as_number < 5.7 THEN 'Normal (<5.7%)'\n    WHEN value_as_number BETWEEN 5.7 AND 6.4 THEN 'Prediabetes (5.7-6.4%)'\n    WHEN value_as_number BETWEEN 6.5 AND 7.9 THEN 'Controlled Diabetes (6.5-7.9%)'\n    WHEN value_as_number BETWEEN 8.0 AND 9.9 THEN 'Uncontrolled Diabetes (8.0-9.9%)'\n    ELSE 'Poorly Controlled Diabetes (â‰¥10.0%)'\n  END AS hba1c_category,\n  COUNT(DISTINCT m.person_id) AS patient_count\nFROM measurement m\nJOIN concept c ON m.measurement_concept_id = c.concept_id\nJOIN condition_occurrence co ON m.person_id = co.person_id\nJOIN concept c_cond ON co.condition_concept_id = c_cond.concept_id\nWHERE c.concept_id = 3004410 -- HbA1c concept ID\n  AND c_cond.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id IN (201826, 4193704)) -- Type 2 diabetes concepts\n  AND c_cond.standard_concept = 'S'\nGROUP BY hba1c_category\nORDER BY\n  CASE\n    WHEN hba1c_category = 'Normal (<5.7%)' THEN 1\n    WHEN hba1c_category = 'Prediabetes (5.7-6.4%)' THEN 2\n    WHEN hba1c_category = 'Controlled Diabetes (6.5-7.9%)' THEN 3\n    WHEN hba1c_category = 'Uncontrolled Diabetes (8.0-9.9%)' THEN 4\n    ELSE 5\n  END;"
      },
      {
        "complexity": "complex",
        "category": "cohort",
        "question": "Identify patients with rheumatoid arthritis who switched biologics within a year of initial treatment",
        "sql": "WITH first_biologic AS (\n  SELECT\n    co.person_id,\n    MIN(de.drug_exposure_start_date) AS first_biologic_date\n  FROM condition_occurrence co\n  JOIN concept c_cond ON co.condition_concept_id = c_cond.concept_id\n  JOIN drug_exposure de ON co.person_id = de.person_id\n  JOIN concept c_drug ON de.drug_concept_id = c_drug.concept_id\n  WHERE c_cond.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 80809) -- RA concept\n    AND c_drug.concept_class_id = 'Biological'\n    AND de.drug_exposure_start_date >= co.condition_start_date\n  GROUP BY co.person_id\n),\nsecond_biologic AS (\n  SELECT\n    fb.person_id,\n    MIN(de.drug_exposure_start_date) AS second_biologic_date,\n    c_drug.concept_name AS second_biologic_name\n  FROM first_biologic fb\n  JOIN drug_exposure de ON fb.person_id = de.person_id\n  JOIN concept c_drug ON de.drug_concept_id = c_drug.concept_id\n  WHERE c_drug.concept_class_id = 'Biological'\n    AND de.drug_concept_id NOT IN (\n      SELECT de2.drug_concept_id\n      FROM drug_exposure de2\n      WHERE de2.person_id = fb.person_id\n        AND de2.drug_exposure_start_date = fb.first_biologic_date\n    )\n    AND de.drug_exposure_start_date > fb.first_biologic_date\n    AND de.drug_exposure_start_date <= fb.first_biologic_date + INTERVAL '1 year'\n  GROUP BY fb.person_id, c_drug.concept_name\n)\nSELECT\n  COUNT(DISTINCT sb.person_id) AS switched_patients,\n  sb.second_biologic_name,\n  AVG(EXTRACT(DAY FROM (sb.second_biologic_date - fb.first_biologic_date))) AS avg_days_to_switch\nFROM second_biologic sb\nJOIN first_biologic fb ON sb.person_id = fb.person_id\nGROUP BY sb.second_biologic_name\nORDER BY switched_patients DESC;"
      },
      {
        "complexity": "complex",
        "category": "temporal",
        "question": "What is the risk of myocardial infarction within 30 days after pneumonia diagnosis?",
        "sql": "WITH pneumonia_patients AS (\n  SELECT\n    co.person_id,\n    co.condition_start_date AS pneumonia_date\n  FROM condition_occurrence co\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 255848) -- Pneumonia concept\n    AND c.standard_concept = 'S'\n),\nmi_events AS (\n  SELECT\n    pp.person_id,\n    MIN(co.condition_start_date) AS mi_date\n  FROM pneumonia_patients pp\n  JOIN condition_occurrence co ON pp.person_id = co.person_id\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4329847) -- MI concept\n    AND c.standard_concept = 'S'\n    AND co.condition_start_date > pp.pneumonia_date\n    AND co.condition_start_date <= pp.pneumonia_date + INTERVAL '30 days'\n  GROUP BY pp.person_id\n)\nSELECT\n  COUNT(DISTINCT pp.person_id) AS pneumonia_patients,\n  COUNT(DISTINCT mi.person_id) AS mi_within_30_days,\n  ROUND((COUNT(DISTINCT mi.person_id)::NUMERIC / COUNT(DISTINCT pp.person_id)::NUMERIC) * 100, 2) AS percentage\nFROM pneumonia_patients pp\nLEFT JOIN mi_events mi ON pp.person_id = mi.person_id;"
      },
      {
        "complexity": "complex",
        "category": "comparative",
        "question": "Compare the effectiveness of ACE inhibitors vs ARBs for blood pressure control in hypertensive patients",
        "sql": "WITH hypertension_patients AS (\n  SELECT DISTINCT\n    person_id,\n    MIN(condition_start_date) AS first_diagnosis_date\n  FROM condition_occurrence co\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316866) -- Hypertension concept\n    AND c.standard_concept = 'S'\n  GROUP BY person_id\n),\nace_patients AS (\n  SELECT DISTINCT\n    hp.person_id,\n    MIN(de.drug_exposure_start_date) AS first_ace_date\n  FROM hypertension_patients hp\n  JOIN drug_exposure de ON hp.person_id = de.person_id\n  JOIN concept c ON de.drug_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1340128) -- ACE inhibitors concept\n    AND c.standard_concept = 'S'\n    AND de.drug_exposure_start_date >= hp.first_diagnosis_date\n  GROUP BY hp.person_id\n),\narb_patients AS (\n  SELECT DISTINCT\n    hp.person_id,\n    MIN(de.drug_exposure_start_date) AS first_arb_date\n  FROM hypertension_patients hp\n  JOIN drug_exposure de ON hp.person_id = de.person_id\n  JOIN concept c ON de.drug_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1341927) -- ARB concept\n    AND c.standard_concept = 'S'\n    AND de.drug_exposure_start_date >= hp.first_diagnosis_date\n  GROUP BY hp.person_id\n),\nace_bp_after AS (\n  SELECT\n    ap.person_id,\n    AVG(m.value_as_number) AS avg_systolic\n  FROM ace_patients ap\n  JOIN measurement m ON ap.person_id = m.person_id\n  JOIN concept c ON m.measurement_concept_id = c.concept_id\n  WHERE c.concept_id = 3004249 -- Systolic BP concept\n    AND m.measurement_date BETWEEN ap.first_ace_date + INTERVAL '90 days' AND ap.first_ace_date + INTERVAL '180 days'\n  GROUP BY ap.person_id\n),\narb_bp_after AS (\n  SELECT\n    arbp.person_id,\n    AVG(m.value_as_number) AS avg_systolic\n  FROM arb_patients arbp\n  JOIN measurement m ON arbp.person_id = m.person_id\n  JOIN concept c ON m.measurement_concept_id = c.concept_id\n  WHERE c.concept_id = 3004249 -- Systolic BP concept\n    AND m.measurement_date BETWEEN arbp.first_arb_date + INTERVAL '90 days' AND arbp.first_arb_date + INTERVAL '180 days'\n  GROUP BY arbp.person_id\n)\nSELECT\n  'ACE Inhibitors' AS medication_class,\n  COUNT(DISTINCT ace_bp_after.person_id) AS patient_count,\n  ROUND(AVG(ace_bp_after.avg_systolic), 1) AS avg_systolic_bp,\n  ROUND(STDDEV(ace_bp_after.avg_systolic), 1) AS stddev_systolic_bp,\n  COUNT(CASE WHEN ace_bp_after.avg_systolic < 140 THEN 1 END) AS controlled_bp_count,\n  ROUND((COUNT(CASE WHEN ace_bp_after.avg_systolic < 140 THEN 1 END)::NUMERIC / COUNT(*)::NUMERIC) * 100, 1) AS percent_controlled\nFROM ace_bp_after\nUNION ALL\nSELECT\n  'ARBs' AS medication_class,\n  COUNT(DISTINCT arb_bp_after.person_id) AS patient_count,\n  ROUND(AVG(arb_bp_after.avg_systolic), 1) AS avg_systolic_bp,\n  ROUND(STDDEV(arb_bp_after.avg_systolic), 1) AS stddev_systolic_bp,\n  COUNT(CASE WHEN arb_bp_after.avg_systolic < 140 THEN 1 END) AS controlled_bp_count,\n  ROUND((COUNT(CASE WHEN arb_bp_after.avg_systolic < 140 THEN 1 END)::NUMERIC / COUNT(*)::NUMERIC) * 100, 1) AS percent_controlled\nFROM arb_bp_after\nORDER BY medication_class;"
      },
      {
        "complexity": "very complex",
        "category": "predictive",
        "question": "Identify risk factors associated with 30-day readmission for congestive heart failure patients",
        "sql": "WITH heart_failure_admissions AS (\n  SELECT\n    p.person_id,\n    vo.visit_occurrence_id,\n    vo.visit_start_date,\n    vo.visit_end_date,\n    p.gender_concept_id,\n    EXTRACT(YEAR FROM vo.visit_start_date) - p.year_of_birth AS age_at_visit,\n    ROW_NUMBER() OVER (PARTITION BY p.person_id ORDER BY vo.visit_start_date) AS visit_seq\n  FROM person p\n  JOIN visit_occurrence vo ON p.person_id = vo.person_id\n  JOIN condition_occurrence co ON vo.visit_occurrence_id = co.visit_occurrence_id\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316139) -- Heart failure\n    AND c.standard_concept = 'S'\n    AND vo.visit_concept_id = 9201 -- Inpatient\n),\nreadmissions AS (\n  SELECT\n    hfa1.person_id,\n    hfa1.visit_occurrence_id,\n    hfa1.visit_start_date AS index_date,\n    hfa1.visit_end_date AS index_end_date,\n    MIN(hfa2.visit_start_date) AS readmit_date,\n    CASE WHEN MIN(hfa2.visit_start_date) IS NOT NULL AND \n              MIN(hfa2.visit_start_date) <= hfa1.visit_end_date + INTERVAL '30 days' \n         THEN 1 ELSE 0 END AS readmitted_30d\n  FROM heart_failure_admissions hfa1\n  LEFT JOIN heart_failure_admissions hfa2 ON \n    hfa1.person_id = hfa2.person_id AND\n    hfa1.visit_occurrence_id <> hfa2.visit_occurrence_id AND\n    hfa2.visit_start_date > hfa1.visit_end_date AND\n    hfa2.visit_start_date <= hfa1.visit_end_date + INTERVAL '30 days'\n  GROUP BY hfa1.person_id, hfa1.visit_occurrence_id, hfa1.visit_start_date, hfa1.visit_end_date\n),\ncomorbidities AS (\n  SELECT\n    r.person_id,\n    r.visit_occurrence_id,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 318712) THEN 1 ELSE 0 END) AS kidney_disease,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4329847) THEN 1 ELSE 0 END) AS myocardial_infarction,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 201826) THEN 1 ELSE 0 END) AS diabetes,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 432923) THEN 1 ELSE 0 END) AS copd,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316139) THEN 1 ELSE 0 END) AS heart_failure\n  FROM readmissions r\n  JOIN condition_occurrence co ON r.person_id = co.person_id\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE co.condition_start_date <= r.index_end_date\n    AND c.standard_concept = 'S'\n  GROUP BY r.person_id, r.visit_occurrence_id\n),\nmedications AS (\n  SELECT\n    r.person_id,\n    r.visit_occurrence_id,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1340128) THEN 1 ELSE 0 END) AS ace_inhibitors,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1319998) THEN 1 ELSE 0 END) AS beta_blockers,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1307863) THEN 1 ELSE 0 END) AS diuretics,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 21600744) THEN 1 ELSE 0 END) AS anticoagulants\n  FROM readmissions r\n  JOIN drug_exposure de ON r.person_id = de.person_id\n  JOIN concept c ON de.drug_concept_id = c.concept_id\n  WHERE de.drug_exposure_start_date BETWEEN r.index_date - INTERVAL '90 days' AND r.index_end_date\n    AND c.standard_concept = 'S'\n  GROUP BY r.person_id, r.visit_occurrence_id\n),\nprocedures AS (\n  SELECT\n    r.person_id,\n    r.visit_occurrence_id,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4283892) THEN 1 ELSE 0 END) AS cardiac_catheterization,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4296653) THEN 1 ELSE 0 END) AS echocardiogram\n  FROM readmissions r\n  JOIN procedure_occurrence po ON r.person_id = po.person_id\n  JOIN concept c ON po.procedure_concept_id = c.concept_id\n  WHERE po.procedure_date BETWEEN r.index_date AND r.index_end_date\n    AND c.standard_concept = 'S'\n  GROUP BY r.person_id, r.visit_occurrence_id\n),\nlabs AS (\n  SELECT\n    r.person_id,\n    r.visit_occurrence_id,\n    AVG(CASE WHEN m.measurement_concept_id = 3023314 THEN m.value_as_number END) AS bun,\n    AVG(CASE WHEN m.measurement_concept_id = 3011597 THEN m.value_as_number END) AS potassium,\n    AVG(CASE WHEN m.measurement_concept_id = 3027114 THEN m.value_as_number END) AS sodium,\n    AVG(CASE WHEN m.measurement_concept_id = 3016723 THEN m.value_as_number END) AS creatinine,\n    AVG(CASE WHEN m.measurement_concept_id = 3000963 THEN m.value_as_number END) AS hematocrit\n  FROM readmissions r\n  JOIN measurement m ON r.person_id = m.person_id\n  WHERE m.measurement_date BETWEEN r.index_date AND r.index_end_date\n  GROUP BY r.person_id, r.visit_occurrence_id\n),\nlos AS (\n  SELECT\n    r.person_id,\n    r.visit_occurrence_id,\n    EXTRACT(DAY FROM (r.index_end_date - r.index_date)) AS length_of_stay\n  FROM readmissions r\n)\nSELECT\n  COUNT(*) AS total_chf_admissions,\n  SUM(r.readmitted_30d) AS readmission_count,\n  ROUND(100.0 * SUM(r.readmitted_30d) / COUNT(*), 1) AS readmission_rate,\n  \n  -- Demographics\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 1 THEN hfa.age_at_visit END), 1) AS readmitted_avg_age,\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 0 THEN hfa.age_at_visit END), 1) AS non_readmitted_avg_age,\n  \n  -- Comorbidities\n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 1 AND c.kidney_disease = 1 THEN 1 ELSE 0 END) / SUM(r.readmitted_30d), 1) AS readmit_pct_kidney_disease,\n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 0 AND c.kidney_disease = 1 THEN 1 ELSE 0 END) / (COUNT(*) - SUM(r.readmitted_30d)), 1) AS non_readmit_pct_kidney_disease,\n  \n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 1 AND c.diabetes = 1 THEN 1 ELSE 0 END) / SUM(r.readmitted_30d), 1) AS readmit_pct_diabetes,\n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 0 AND c.diabetes = 1 THEN 1 ELSE 0 END) / (COUNT(*) - SUM(r.readmitted_30d)), 1) AS non_readmit_pct_diabetes,\n  \n  -- Medications\n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 1 AND m.beta_blockers = 1 THEN 1 ELSE 0 END) / SUM(r.readmitted_30d), 1) AS readmit_pct_beta_blockers,\n  ROUND(100.0 * SUM(CASE WHEN r.readmitted_30d = 0 AND m.beta_blockers = 1 THEN 1 ELSE 0 END) / (COUNT(*) - SUM(r.readmitted_30d)), 1) AS non_readmit_pct_beta_blockers,\n  \n  -- Length of stay\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 1 THEN los.length_of_stay END), 1) AS readmitted_avg_los,\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 0 THEN los.length_of_stay END), 1) AS non_readmitted_avg_los,\n  \n  -- Lab results\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 1 THEN l.creatinine END), 2) AS readmitted_avg_creatinine,\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 0 THEN l.creatinine END), 2) AS non_readmitted_avg_creatinine,\n  \n  ROUND(AVG(CASE WHEN r.readmitted_30d = 1 THEN l.sodium END), 1) AS readmitted_avg_sodium,\n  ROUND(AVG(CASE WHEN r.readmitted_30d = 0 THEN l.sodium END), 1) AS non_readmitted_avg_sodium\n  \nFROM readmissions r\nJOIN heart_failure_admissions hfa ON r.visit_occurrence_id = hfa.visit_occurrence_id\nLEFT JOIN comorbidities c ON r.visit_occurrence_id = c.visit_occurrence_id\nLEFT JOIN medications m ON r.visit_occurrence_id = m.visit_occurrence_id\nLEFT JOIN procedures p ON r.visit_occurrence_id = p.visit_occurrence_id\nLEFT JOIN labs l ON r.visit_occurrence_id = l.visit_occurrence_id\nLEFT JOIN los ON r.visit_occurrence_id = los.visit_occurrence_id;"
      },
      {
        "complexity": "very complex",
        "category": "multidomain",
        "question": "Create a clinical profile of patients with both hypertension and chronic kidney disease, including medications, labs, and outcomes",
        "sql": "WITH target_cohort AS (\n  SELECT\n    p.person_id,\n    MIN(co_htn.condition_start_date) AS first_htn_date,\n    MIN(co_ckd.condition_start_date) AS first_ckd_date,\n    GREATEST(MIN(co_htn.condition_start_date), MIN(co_ckd.condition_start_date)) AS index_date,\n    p.gender_concept_id,\n    p.race_concept_id,\n    EXTRACT(YEAR FROM GREATEST(MIN(co_htn.condition_start_date), MIN(co_ckd.condition_start_date))) - p.year_of_birth AS age_at_index\n  FROM person p\n  -- Get hypertension diagnoses\n  JOIN condition_occurrence co_htn ON p.person_id = co_htn.person_id\n  JOIN concept c_htn ON co_htn.condition_concept_id = c_htn.concept_id\n  -- Get CKD diagnoses\n  JOIN condition_occurrence co_ckd ON p.person_id = co_ckd.person_id\n  JOIN concept c_ckd ON co_ckd.condition_concept_id = c_ckd.concept_id\n  WHERE c_htn.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 316866) -- Hypertension\n    AND c_ckd.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 46271022) -- CKD\n    AND c_htn.standard_concept = 'S'\n    AND c_ckd.standard_concept = 'S'\n  GROUP BY p.person_id, p.gender_concept_id, p.race_concept_id, p.year_of_birth\n),\ndemographics AS (\n  SELECT\n    tc.person_id,\n    c_gender.concept_name AS gender,\n    c_race.concept_name AS race,\n    tc.age_at_index,\n    CASE \n      WHEN tc.age_at_index < 18 THEN '<18'\n      WHEN tc.age_at_index BETWEEN 18 AND 44 THEN '18-44'\n      WHEN tc.age_at_index BETWEEN 45 AND 64 THEN '45-64'\n      WHEN tc.age_at_index BETWEEN 65 AND 74 THEN '65-74'\n      ELSE '75+' \n    END AS age_group\n  FROM target_cohort tc\n  JOIN concept c_gender ON tc.gender_concept_id = c_gender.concept_id\n  JOIN concept c_race ON tc.race_concept_id = c_race.concept_id\n),\ncomorbidities AS (\n  SELECT\n    tc.person_id,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 201826) THEN 1 ELSE 0 END) AS diabetes,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 432867) THEN 1 ELSE 0 END) AS cardiovascular_disease,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 432923) THEN 1 ELSE 0 END) AS copd,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4030518) THEN 1 ELSE 0 END) AS depression,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4182210) THEN 1 ELSE 0 END) AS anemia\n  FROM target_cohort tc\n  JOIN condition_occurrence co ON tc.person_id = co.person_id\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE co.condition_start_date BETWEEN tc.index_date - INTERVAL '1 year' AND tc.index_date + INTERVAL '1 year'\n    AND c.standard_concept = 'S'\n  GROUP BY tc.person_id\n),\nmedications AS (\n  SELECT\n    tc.person_id,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1340128) THEN 1 ELSE 0 END) AS ace_inhibitors,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1341927) THEN 1 ELSE 0 END) AS arbs,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1319998) THEN 1 ELSE 0 END) AS beta_blockers,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1307863) THEN 1 ELSE 0 END) AS diuretics,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1332418) THEN 1 ELSE 0 END) AS calcium_channel_blockers,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 939359) THEN 1 ELSE 0 END) AS statins,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 1363749) THEN 1 ELSE 0 END) AS phosphate_binders\n  FROM target_cohort tc\n  JOIN drug_exposure de ON tc.person_id = de.person_id\n  JOIN concept c ON de.drug_concept_id = c.concept_id\n  WHERE de.drug_exposure_start_date >= tc.index_date\n    AND c.standard_concept = 'S'\n  GROUP BY tc.person_id\n),\nlab_values AS (\n  SELECT\n    tc.person_id,\n    -- Kidney function\n    AVG(CASE WHEN m.measurement_concept_id = 3016723 THEN m.value_as_number END) AS avg_creatinine,\n    MIN(CASE WHEN m.measurement_concept_id = 3016723 THEN m.value_as_number END) AS min_creatinine,\n    MAX(CASE WHEN m.measurement_concept_id = 3016723 THEN m.value_as_number END) AS max_creatinine,\n    AVG(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) AS avg_egfr,\n    MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) AS min_egfr,\n    -- Blood pressure\n    AVG(CASE WHEN m.measurement_concept_id = 3004249 THEN m.value_as_number END) AS avg_systolic,\n    AVG(CASE WHEN m.measurement_concept_id = 3012888 THEN m.value_as_number END) AS avg_diastolic,\n    -- Urinary markers\n    AVG(CASE WHEN m.measurement_concept_id = 3000034 THEN m.value_as_number END) AS avg_uacr,\n    -- Electrolytes\n    AVG(CASE WHEN m.measurement_concept_id = 3023314 THEN m.value_as_number END) AS avg_bun,\n    AVG(CASE WHEN m.measurement_concept_id = 3023103 THEN m.value_as_number END) AS avg_albumin,\n    AVG(CASE WHEN m.measurement_concept_id = 3024561 THEN m.value_as_number END) AS avg_phosphate,\n    AVG(CASE WHEN m.measurement_concept_id = 3027114 THEN m.value_as_number END) AS avg_sodium,\n    AVG(CASE WHEN m.measurement_concept_id = 3011597 THEN m.value_as_number END) AS avg_potassium,\n    -- Anemia markers\n    AVG(CASE WHEN m.measurement_concept_id = 3000963 THEN m.value_as_number END) AS avg_hematocrit,\n    AVG(CASE WHEN m.measurement_concept_id = 3004501 THEN m.value_as_number END) AS avg_hemoglobin\n  FROM target_cohort tc\n  JOIN measurement m ON tc.person_id = m.person_id\n  WHERE m.measurement_date >= tc.index_date\n  GROUP BY tc.person_id\n),\noutcomes AS (\n  SELECT\n    tc.person_id,\n    -- Kidney outcomes\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4069159) THEN 1 ELSE 0 END) AS dialysis,\n    -- Cardiovascular outcomes\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 4329847) THEN 1 ELSE 0 END) AS myocardial_infarction,\n    MAX(CASE WHEN c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 372924) THEN 1 ELSE 0 END) AS stroke,\n    -- Mortality\n    MAX(CASE WHEN d.person_id IS NOT NULL THEN 1 ELSE 0 END) AS death,\n    -- Hospitalizations\n    COUNT(DISTINCT CASE WHEN vo.visit_concept_id = 9201 THEN vo.visit_occurrence_id END) AS inpatient_visits,\n    -- ED visits\n    COUNT(DISTINCT CASE WHEN vo.visit_concept_id = 9203 THEN vo.visit_occurrence_id END) AS ed_visits\n  FROM target_cohort tc\n  LEFT JOIN procedure_occurrence po ON tc.person_id = po.person_id AND po.procedure_date >= tc.index_date\n  LEFT JOIN concept c_proc ON po.procedure_concept_id = c_proc.concept_id\n  LEFT JOIN condition_occurrence co ON tc.person_id = co.person_id AND co.condition_start_date >= tc.index_date\n  LEFT JOIN concept c ON co.condition_concept_id = c.concept_id\n  LEFT JOIN death d ON tc.person_id = d.person_id\n  LEFT JOIN visit_occurrence vo ON tc.person_id = vo.person_id AND vo.visit_start_date >= tc.index_date\n  WHERE (c.concept_id IS NULL OR c.standard_concept = 'S')\n    AND (c_proc.concept_id IS NULL OR c_proc.standard_concept = 'S')\n  GROUP BY tc.person_id\n),\nckd_staging AS (\n  SELECT\n    tc.person_id,\n    CASE\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) >= 90 THEN 'Stage 1'\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) BETWEEN 60 AND 89 THEN 'Stage 2'\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) BETWEEN 45 AND 59 THEN 'Stage 3A'\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) BETWEEN 30 AND 44 THEN 'Stage 3B'\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) BETWEEN 15 AND 29 THEN 'Stage 4'\n      WHEN MIN(CASE WHEN m.measurement_concept_id = 3049187 THEN m.value_as_number END) < 15 THEN 'Stage 5'\n      ELSE 'Unknown'\n    END AS ckd_stage\n  FROM target_cohort tc\n  JOIN measurement m ON tc.person_id = m.person_id\n  WHERE m.measurement_concept_id = 3049187 -- eGFR\n    AND m.measurement_date >= tc.index_date\n  GROUP BY tc.person_id\n),\nbp_control AS (\n  SELECT\n    tc.person_id,\n    CASE\n      WHEN AVG(CASE WHEN m.measurement_concept_id = 3004249 THEN m.value_as_number END) < 130 AND\n           AVG(CASE WHEN m.measurement_concept_id = 3012888 THEN m.value_as_number END) < 80 THEN 'Controlled'\n      ELSE 'Uncontrolled'\n    END AS bp_control_status\n  FROM target_cohort tc\n  JOIN measurement m ON tc.person_id = m.person_id\n  WHERE (m.measurement_concept_id = 3004249 OR m.measurement_concept_id = 3012888)\n    AND m.measurement_date >= tc.index_date\n  GROUP BY tc.person_id\n)\nSELECT\n  -- Cohort size\n  COUNT(DISTINCT tc.person_id) AS total_patients,\n  \n  -- Demographics\n  ROUND(AVG(tc.age_at_index), 1) AS avg_age,\n  ROUND(100.0 * COUNT(CASE WHEN d.gender = 'MALE' THEN 1 END) / COUNT(*), 1) AS pct_male,\n  \n  -- Age distribution\n  ROUND(100.0 * COUNT(CASE WHEN d.age_group = '<18' THEN 1 END) / COUNT(*), 1) AS pct_under_18,\n  ROUND(100.0 * COUNT(CASE WHEN d.age_group = '18-44' THEN 1 END) / COUNT(*), 1) AS pct_18_44,\n  ROUND(100.0 * COUNT(CASE WHEN d.age_group = '45-64' THEN 1 END) / COUNT(*), 1) AS pct_45_64,\n  ROUND(100.0 * COUNT(CASE WHEN d.age_group = '65-74' THEN 1 END) / COUNT(*), 1) AS pct_65_74,\n  ROUND(100.0 * COUNT(CASE WHEN d.age_group = '75+' THEN 1 END) / COUNT(*), 1) AS pct_75_plus,\n  \n  -- Comorbidities\n  ROUND(100.0 * SUM(cm.diabetes) / COUNT(*), 1) AS pct_diabetes,\n  ROUND(100.0 * SUM(cm.cardiovascular_disease) / COUNT(*), 1) AS pct_cvd,\n  ROUND(100.0 * SUM(cm.anemia) / COUNT(*), 1) AS pct_anemia,\n  ROUND(100.0 * SUM(cm.depression) / COUNT(*), 1) AS pct_depression,\n  \n  -- CKD Staging\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 1' THEN 1 END) / COUNT(*), 1) AS pct_stage_1,\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 2' THEN 1 END) / COUNT(*), 1) AS pct_stage_2,\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 3A' THEN 1 END) / COUNT(*), 1) AS pct_stage_3a,\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 3B' THEN 1 END) / COUNT(*), 1) AS pct_stage_3b,\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 4' THEN 1 END) / COUNT(*), 1) AS pct_stage_4,\n  ROUND(100.0 * COUNT(CASE WHEN cs.ckd_stage = 'Stage 5' THEN 1 END) / COUNT(*), 1) AS pct_stage_5,\n  \n  -- BP Control\n  ROUND(100.0 * COUNT(CASE WHEN bpc.bp_control_status = 'Controlled' THEN 1 END) / COUNT(*), 1) AS pct_bp_controlled,\n  \n  -- Medications\n  ROUND(100.0 * SUM(m.ace_inhibitors) / COUNT(*), 1) AS pct_on_acei,\n  ROUND(100.0 * SUM(m.arbs) / COUNT(*), 1) AS pct_on_arbs,\n  ROUND(100.0 * SUM(m.beta_blockers) / COUNT(*), 1) AS pct_on_beta_blockers,\n  ROUND(100.0 * SUM(m.calcium_channel_blockers) / COUNT(*), 1) AS pct_on_ccb,\n  ROUND(100.0 * SUM(m.diuretics) / COUNT(*), 1) AS pct_on_diuretics,\n  ROUND(100.0 * SUM(m.statins) / COUNT(*), 1) AS pct_on_statins,\n  ROUND(100.0 * SUM(m.phosphate_binders) / COUNT(*), 1) AS pct_on_phosphate_binders,\n  \n  -- Lab values (average)\n  ROUND(AVG(lv.avg_egfr), 1) AS avg_egfr_value,\n  ROUND(AVG(lv.avg_creatinine), 2) AS avg_creatinine_value,\n  ROUND(AVG(lv.avg_uacr), 1) AS avg_uacr_value,\n  ROUND(AVG(lv.avg_systolic), 1) AS avg_systolic_bp,\n  ROUND(AVG(lv.avg_diastolic), 1) AS avg_diastolic_bp,\n  ROUND(AVG(lv.avg_hemoglobin), 1) AS avg_hemoglobin_value,\n  ROUND(AVG(lv.avg_phosphate), 2) AS avg_phosphate_value,\n  ROUND(AVG(lv.avg_potassium), 2) AS avg_potassium_value,\n  \n  -- Outcomes\n  ROUND(100.0 * SUM(o.dialysis) / COUNT(*), 1) AS pct_dialysis,\n  ROUND(100.0 * SUM(o.myocardial_infarction) / COUNT(*), 1) AS pct_mi,\n  ROUND(100.0 * SUM(o.stroke) / COUNT(*), 1) AS pct_stroke,\n  ROUND(100.0 * SUM(o.death) / COUNT(*), 1) AS pct_death,\n  ROUND(AVG(o.inpatient_visits), 2) AS avg_hospitalizations_per_patient,\n  ROUND(AVG(o.ed_visits), 2) AS avg_ed_visits_per_patient\n  \nFROM target_cohort tc\nJOIN demographics d ON tc.person_id = d.person_id\nLEFT JOIN comorbidities cm ON tc.person_id = cm.person_id\nLEFT JOIN medications m ON tc.person_id = m.person_id\nLEFT JOIN lab_values lv ON tc.person_id = lv.person_id\nLEFT JOIN outcomes o ON tc.person_id = o.person_id\nLEFT JOIN ckd_staging cs ON tc.person_id = cs.person_id\nLEFT JOIN bp_control bpc ON tc.person_id = bpc.person_id;"
      },
      {
        "complexity": "very complex",
        "category": "algorithm",
        "question": "Implement the ASCVD (Atherosclerotic Cardiovascular Disease) risk score calculation using OMOP data",
        "sql": "WITH patient_cohort AS (\n  SELECT\n    p.person_id,\n    p.gender_concept_id,\n    c_gender.concept_name AS gender,\n    p.race_concept_id,\n    c_race.concept_name AS race,\n    EXTRACT(YEAR FROM CURRENT_DATE) - p.year_of_birth AS age,\n    CASE WHEN p.gender_concept_id = 8507 THEN 'Male' ELSE 'Female' END AS sex,\n    CASE \n      WHEN c_race.concept_name LIKE '%Black%' OR c_race.concept_name LIKE '%African American%' THEN 'Black'\n      ELSE 'Other'\n    END AS race_group\n  FROM person p\n  JOIN concept c_gender ON p.gender_concept_id = c_gender.concept_id\n  JOIN concept c_race ON p.race_concept_id = c_race.concept_id\n  WHERE (EXTRACT(YEAR FROM CURRENT_DATE) - p.year_of_birth) BETWEEN 40 AND 79\n),\ntotal_cholesterol AS (\n  SELECT\n    m.person_id,\n    AVG(m.value_as_number) AS total_cholesterol_avg\n  FROM measurement m\n  JOIN concept c ON m.measurement_concept_id = c.concept_id\n  WHERE c.concept_id = 3027114 -- Total Cholesterol\n    AND m.value_as_number > 0\n    AND m.value_as_number < 600\n  GROUP BY m.person_id\n),\nhdl_cholesterol AS (\n  SELECT\n    m.person_id,\n    AVG(m.value_as_number) AS hdl_avg\n  FROM measurement m\n  JOIN concept c ON m.measurement_concept_id = c.concept_id\n  WHERE c.concept_id = 3027114 -- HDL\n    AND m.value_as_number > 0\n    AND m.value_as_number < 200\n  GROUP BY m.person_id\n),\nsystolic_bp AS (\n  SELECT\n    m.person_id,\n    AVG(m.value_as_number) AS systolic_avg,\n    AVG(CASE WHEN de.person_id IS NOT NULL THEN 1 ELSE 0 END) AS on_bp_meds\n  FROM measurement m\n  JOIN concept c ON m.measurement_concept_id = c.concept_id\n  LEFT JOIN drug_exposure de ON m.person_id = de.person_id\n  LEFT JOIN concept c_drug ON de.drug_concept_id = c_drug.concept_id\n  WHERE c.concept_id = 3004249 -- Systolic BP\n    AND m.value_as_number > 60\n    AND m.value_as_number < 240\n    AND (c_drug.concept_id IS NULL OR \n        c_drug.concept_id IN (\n          SELECT descendant_concept_id FROM concept_ancestor \n          WHERE ancestor_concept_id IN (1340128, 1341927, 1319998, 1307863, 1332418)\n        )) -- Common BP med classes (ACEi, ARB, BB, diuretics, CCB)\n    AND (de.drug_exposure_start_date IS NULL OR de.drug_exposure_start_date <= m.measurement_date)\n  GROUP BY m.person_id\n),\ndiabetes AS (\n  SELECT\n    co.person_id,\n    1 AS has_diabetes\n  FROM condition_occurrence co\n  JOIN concept c ON co.condition_concept_id = c.concept_id\n  WHERE c.concept_id IN (SELECT descendant_concept_id FROM concept_ancestor WHERE ancestor_concept_id = 201826) -- Diabetes\n    AND c.standard_concept = 'S'\n  GROUP BY co.person_id\n),\nsmoking AS (\n  SELECT\n    o.person_id,\n    MAX(CASE \n      WHEN c.concept_id IN (4261564, 42709996, 45765920) THEN 1\n      ELSE 0\n    END) AS is_current_smoker\n  FROM observation o\n  JOIN concept c ON o.observation_concept_id = c.concept_id\n  WHERE c.concept_id IN (\n    4261564, -- Current tobacco smoker\n    42709996, -- Current every day smoker\n    45765920, -- Tobacco use\n    4031965, -- Non-smoker\n    4294542 -- Former smoker\n  )\n  GROUP BY o.person_id\n),\nascvd_input AS (\n  SELECT\n    pc.person_id,\n    pc.age,\n    pc.sex,\n    pc.race_group,\n    tc.total_cholesterol_avg,\n    hdl.hdl_avg,\n    sbp.systolic_avg,\n    COALESCE(sbp.on_bp_meds, 0) AS on_bp_meds,\n    COALESCE(d.has_diabetes, 0) AS has_diabetes,\n    COALESCE(s.is_current_smoker, 0) AS is_current_smoker\n  FROM patient_cohort pc\n  LEFT JOIN total_cholesterol tc ON pc.person_id = tc.person_id\n  LEFT JOIN hdl_cholesterol hdl ON pc.person_id = hdl.person_id\n  LEFT JOIN systolic_bp sbp ON pc.person_id = sbp.person_id\n  LEFT JOIN diabetes d ON pc.person_id = d.person_id\n  LEFT JOIN smoking s ON pc.person_id = s.person_id\n  WHERE tc.total_cholesterol_avg IS NOT NULL\n    AND hdl.hdl_avg IS NOT NULL\n    AND sbp.systolic_avg IS NOT NULL\n    AND s.is_current_smoker IS NOT NULL\n),\nascvd_calculation AS (\n  SELECT\n    ai.person_id,\n    ai.age,\n    ai.sex,\n    ai.race_group,\n    ai.total_cholesterol_avg,\n    ai.hdl_avg,\n    ai.systolic_avg,\n    ai.on_bp_meds,\n    ai.has_diabetes,\n    ai.is_current_smoker,\n    -- Coefficient calculation based on 2013 ACC/AHA Guideline on the Assessment of Cardiovascular Risk\n    CASE\n      WHEN ai.sex = 'Female' AND ai.race_group = 'Black' THEN\n        17.114 * LN(ai.age) +\n        0.940 * LN(ai.total_cholesterol_avg) -\n        18.920 * LN(ai.hdl_avg) +\n        0.818 * LN(ai.systolic_avg) * (1 - ai.on_bp_meds) +\n        0.296 * LN(ai.systolic_avg) * ai.on_bp_meds +\n        0.874 * ai.is_current_smoker +\n        0.463 * ai.has_diabetes - 86.61\n        \n      WHEN ai.sex = 'Female' AND ai.race_group = 'Other' THEN\n        -29.799 * LN(ai.age) +\n        4.884 * LN(ai.age) * LN(ai.age) +\n        13.540 * LN(ai.total_cholesterol_avg) -\n        3.114 * LN(ai.age) * LN(ai.total_cholesterol_avg) -\n        13.578 * LN(ai.hdl_avg) +\n        3.149 * LN(ai.age) * LN(ai.hdl_avg) +\n        1.957 * LN(ai.systolic_avg) * (1 - ai.on_bp_meds) +\n        1.082 * LN(ai.systolic_avg) * ai.on_bp_meds +\n        7.574 * ai.is_current_smoker -\n        1.665 * LN(ai.age) * ai.is_current_smoker +\n        0.661 * ai.has_diabetes - 29.18\n        \n      WHEN ai.sex = 'Male' AND ai.race_group = 'Black' THEN\n        2.469 * LN(ai.age) +\n        0.302 * LN(ai.total_cholesterol_avg) -\n        0.307 * LN(ai.hdl_avg) +\n        1.916 * LN(ai.systolic_avg) * (1 - ai.on_bp_meds) +\n        1.809 * LN(ai.systolic_avg) * ai.on_bp_meds +\n        0.549 * ai.is_current_smoker +\n        0.645 * ai.has_diabetes - 19.54\n        \n      WHEN ai.sex = 'Male' AND ai.race_group = 'Other' THEN\n        12.344 * LN(ai.age) +\n        11.853 * LN(ai.total_cholesterol_avg) -\n        2.664 * LN(ai.age) * LN(ai.total_cholesterol_avg) -\n        7.990 * LN(ai.hdl_avg) +\n        1.769 * LN(ai.age) * LN(ai.hdl_avg) +\n        1.797 * LN(ai.systolic_avg) * (1 - ai.on_bp_meds) +\n        1.764 * LN(ai.systolic_avg) * ai.on_bp_meds +\n        7.837 * ai.is_current_smoker -\n        1.795 * LN(ai.age) * ai.is_current_smoker +\n        0.658 * ai.has_diabetes - 61.18\n    END AS coefficient\n  FROM ascvd_input ai\n),\nascvd_risk AS (\n  SELECT\n    ac.*,\n    CASE\n      WHEN ac.sex = 'Female' AND ac.race_group = 'Black' THEN\n        1 - POWER(0.9533, EXP(ac.coefficient))\n      WHEN ac.sex = 'Female' AND ac.race_group = 'Other' THEN\n        1 - POWER(0.9665, EXP(ac.coefficient))\n      WHEN ac.sex = 'Male' AND ac.race_group = 'Black' THEN\n        1 - POWER(0.8954, EXP(ac.coefficient))\n      WHEN ac.sex = 'Male' AND ac.race_group = 'Other' THEN\n        1 - POWER(0.9144, EXP(ac.coefficient))\n    END * 100 AS ascvd_10yr_risk,\n    CASE\n      WHEN ac.age >= 40 AND ac.age <= 59 THEN 'Group 1: 40-59'\n      WHEN ac.age >= 60 AND ac.age <= 79 THEN 'Group 2: 60-79'\n    END AS age_group\n  FROM ascvd_calculation ac\n)\nSELECT\n  ar.person_id,\n  ar.age,\n  ar.sex,\n  ar.race_group,\n  ROUND(ar.total_cholesterol_avg, 0) AS total_cholesterol,\n  ROUND(ar.hdl_avg, 0) AS hdl,\n  ROUND(ar.systolic_avg, 0) AS systolic_bp,\n  CASE WHEN ar.on_bp_meds > 0 THEN 'Yes' ELSE 'No' END AS on_bp_meds,\n  CASE WHEN ar.has_diabetes = 1 THEN 'Yes' ELSE 'No' END AS has_diabetes,\n  CASE WHEN ar.is_current_smoker = 1 THEN 'Yes' ELSE 'No' END AS is_current_smoker,\n  ROUND(ar.ascvd_10yr_risk, 1) AS ascvd_10yr_risk_pct,\n  CASE\n    WHEN ar.ascvd_10yr_risk < 5 THEN 'Low Risk (<5%)'\n    WHEN ar.ascvd_10yr_risk BETWEEN 5 AND 7.4 THEN 'Borderline Risk (5-7.4%)'\n    WHEN ar.ascvd_10yr_risk BETWEEN 7.5 AND 19.9 THEN 'Intermediate Risk (7.5-19.9%)'\n    ELSE 'High Risk (â‰¥20%)'\n  END AS risk_category\nFROM ascvd_risk ar\nORDER BY ar.ascvd_10yr_risk DESC;\n\n-- Summary statistics\nSELECT\n  'All Patients' AS group_name,\n  COUNT(*) AS patient_count,\n  ROUND(AVG(ascvd_10yr_risk), 1) AS avg_10yr_risk,\n  ROUND(STDDEV(ascvd_10yr_risk), 1) AS stddev_10yr_risk,\n  ROUND(MIN(ascvd_10yr_risk), 1) AS min_10yr_risk,\n  ROUND(MAX(ascvd_10yr_risk), 1) AS max_10yr_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk < 5 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_low_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk BETWEEN 5 AND 7.4 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_borderline_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk BETWEEN 7.5 AND 19.9 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_intermediate_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk >= 20 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_high_risk\nFROM ascvd_risk\n\nUNION ALL\n\nSELECT\n  sex || '-' || race_group || ' ' || age_group AS group_name,\n  COUNT(*) AS patient_count,\n  ROUND(AVG(ascvd_10yr_risk), 1) AS avg_10yr_risk,\n  ROUND(STDDEV(ascvd_10yr_risk), 1) AS stddev_10yr_risk,\n  ROUND(MIN(ascvd_10yr_risk), 1) AS min_10yr_risk,\n  ROUND(MAX(ascvd_10yr_risk), 1) AS max_10yr_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk < 5 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_low_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk BETWEEN 5 AND 7.4 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_borderline_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk BETWEEN 7.5 AND 19.9 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_intermediate_risk,\n  ROUND(COUNT(CASE WHEN ascvd_10yr_risk >= 20 THEN 1 END) * 100.0 / COUNT(*), 1) AS pct_high_risk\nFROM ascvd_risk\nGROUP BY sex, race_group, age_group\nORDER BY group_name;"
      }
    ]
  }